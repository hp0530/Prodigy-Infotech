{
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "## Prodigy Infotech\n",
        "\n",
        "### Author : Harsh Patil\n",
        "\n",
        "\n",
        "### Data Science\n",
        "### Task-03\n",
        "\n",
        "#### Task: Build a decision tree classifier to predict whether a customer will purchase a product or service based on their demographic and behavioral data. Use a dataset such as the Bank Marketing dataset from the UCI Machine Learning Repository."
      ],
      "metadata": {
        "id": "j4OLP2IL_9h9"
      },
      "id": "j4OLP2IL_9h9"
    },
    {
      "cell_type": "markdown",
      "id": "7ed613aa-c58e-402f-844d-4259080a7519",
      "metadata": {
        "id": "7ed613aa-c58e-402f-844d-4259080a7519"
      },
      "source": [
        "\n",
        "### DataSet Link: https://archive.ics.uci.edu/ml/datasets/Bank+MarketingH\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "21b2b1c1-8a0f-4db2-8e2b-584de46b1586",
      "metadata": {
        "id": "21b2b1c1-8a0f-4db2-8e2b-584de46b1586"
      },
      "outputs": [],
      "source": [
        "#importing the necessary libraries.\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from scipy.stats import chi2_contingency\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "from sklearn.metrics import accuracy_score\n",
        "from sklearn.metrics import classification_report, confusion_matrix, ConfusionMatrixDisplay\n",
        "import warnings\n",
        "warnings.filterwarnings(\"ignore\")\n",
        "pd.set_option('display.max_columns', 100)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "15d634cd-780b-44bd-afcb-15cabb8bc69a",
      "metadata": {
        "id": "15d634cd-780b-44bd-afcb-15cabb8bc69a",
        "outputId": "37bfd483-0f82-4398-fda6-79c2fafb106d"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>age</th>\n",
              "      <th>job</th>\n",
              "      <th>marital</th>\n",
              "      <th>education</th>\n",
              "      <th>default</th>\n",
              "      <th>balance</th>\n",
              "      <th>housing</th>\n",
              "      <th>loan</th>\n",
              "      <th>contact</th>\n",
              "      <th>day</th>\n",
              "      <th>month</th>\n",
              "      <th>duration</th>\n",
              "      <th>campaign</th>\n",
              "      <th>pdays</th>\n",
              "      <th>previous</th>\n",
              "      <th>poutcome</th>\n",
              "      <th>subscribed</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>26110</td>\n",
              "      <td>56</td>\n",
              "      <td>admin.</td>\n",
              "      <td>married</td>\n",
              "      <td>unknown</td>\n",
              "      <td>no</td>\n",
              "      <td>1933</td>\n",
              "      <td>no</td>\n",
              "      <td>no</td>\n",
              "      <td>telephone</td>\n",
              "      <td>19</td>\n",
              "      <td>nov</td>\n",
              "      <td>44</td>\n",
              "      <td>2</td>\n",
              "      <td>-1</td>\n",
              "      <td>0</td>\n",
              "      <td>unknown</td>\n",
              "      <td>no</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>40576</td>\n",
              "      <td>31</td>\n",
              "      <td>unknown</td>\n",
              "      <td>married</td>\n",
              "      <td>secondary</td>\n",
              "      <td>no</td>\n",
              "      <td>3</td>\n",
              "      <td>no</td>\n",
              "      <td>no</td>\n",
              "      <td>cellular</td>\n",
              "      <td>20</td>\n",
              "      <td>jul</td>\n",
              "      <td>91</td>\n",
              "      <td>2</td>\n",
              "      <td>-1</td>\n",
              "      <td>0</td>\n",
              "      <td>unknown</td>\n",
              "      <td>no</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>15320</td>\n",
              "      <td>27</td>\n",
              "      <td>services</td>\n",
              "      <td>married</td>\n",
              "      <td>secondary</td>\n",
              "      <td>no</td>\n",
              "      <td>891</td>\n",
              "      <td>yes</td>\n",
              "      <td>no</td>\n",
              "      <td>cellular</td>\n",
              "      <td>18</td>\n",
              "      <td>jul</td>\n",
              "      <td>240</td>\n",
              "      <td>1</td>\n",
              "      <td>-1</td>\n",
              "      <td>0</td>\n",
              "      <td>unknown</td>\n",
              "      <td>no</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>43962</td>\n",
              "      <td>57</td>\n",
              "      <td>management</td>\n",
              "      <td>divorced</td>\n",
              "      <td>tertiary</td>\n",
              "      <td>no</td>\n",
              "      <td>3287</td>\n",
              "      <td>no</td>\n",
              "      <td>no</td>\n",
              "      <td>cellular</td>\n",
              "      <td>22</td>\n",
              "      <td>jun</td>\n",
              "      <td>867</td>\n",
              "      <td>1</td>\n",
              "      <td>84</td>\n",
              "      <td>3</td>\n",
              "      <td>success</td>\n",
              "      <td>yes</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>29842</td>\n",
              "      <td>31</td>\n",
              "      <td>technician</td>\n",
              "      <td>married</td>\n",
              "      <td>secondary</td>\n",
              "      <td>no</td>\n",
              "      <td>119</td>\n",
              "      <td>yes</td>\n",
              "      <td>no</td>\n",
              "      <td>cellular</td>\n",
              "      <td>4</td>\n",
              "      <td>feb</td>\n",
              "      <td>380</td>\n",
              "      <td>1</td>\n",
              "      <td>-1</td>\n",
              "      <td>0</td>\n",
              "      <td>unknown</td>\n",
              "      <td>no</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      ID  age         job   marital  education default  balance housing loan  \\\n",
              "0  26110   56      admin.   married    unknown      no     1933      no   no   \n",
              "1  40576   31     unknown   married  secondary      no        3      no   no   \n",
              "2  15320   27    services   married  secondary      no      891     yes   no   \n",
              "3  43962   57  management  divorced   tertiary      no     3287      no   no   \n",
              "4  29842   31  technician   married  secondary      no      119     yes   no   \n",
              "\n",
              "     contact  day month  duration  campaign  pdays  previous poutcome  \\\n",
              "0  telephone   19   nov        44         2     -1         0  unknown   \n",
              "1   cellular   20   jul        91         2     -1         0  unknown   \n",
              "2   cellular   18   jul       240         1     -1         0  unknown   \n",
              "3   cellular   22   jun       867         1     84         3  success   \n",
              "4   cellular    4   feb       380         1     -1         0  unknown   \n",
              "\n",
              "  subscribed  \n",
              "0         no  \n",
              "1         no  \n",
              "2         no  \n",
              "3        yes  \n",
              "4         no  "
            ]
          },
          "execution_count": 254,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "#Loading the train data and viewing first few rows\n",
        "train = pd.read_csv(\"bank_data/train.csv\")\n",
        "train.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "640e6685-ed4f-4d83-8843-f4f74b9cb67d",
      "metadata": {
        "id": "640e6685-ed4f-4d83-8843-f4f74b9cb67d",
        "outputId": "a5346cf8-3513-4111-ac31-0e2fde40bbc4"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>age</th>\n",
              "      <th>job</th>\n",
              "      <th>marital</th>\n",
              "      <th>education</th>\n",
              "      <th>default</th>\n",
              "      <th>balance</th>\n",
              "      <th>housing</th>\n",
              "      <th>loan</th>\n",
              "      <th>contact</th>\n",
              "      <th>day</th>\n",
              "      <th>month</th>\n",
              "      <th>duration</th>\n",
              "      <th>campaign</th>\n",
              "      <th>pdays</th>\n",
              "      <th>previous</th>\n",
              "      <th>poutcome</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>38441</td>\n",
              "      <td>32</td>\n",
              "      <td>services</td>\n",
              "      <td>married</td>\n",
              "      <td>secondary</td>\n",
              "      <td>no</td>\n",
              "      <td>118</td>\n",
              "      <td>yes</td>\n",
              "      <td>no</td>\n",
              "      <td>cellular</td>\n",
              "      <td>15</td>\n",
              "      <td>may</td>\n",
              "      <td>20</td>\n",
              "      <td>6</td>\n",
              "      <td>-1</td>\n",
              "      <td>0</td>\n",
              "      <td>unknown</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>40403</td>\n",
              "      <td>78</td>\n",
              "      <td>retired</td>\n",
              "      <td>divorced</td>\n",
              "      <td>primary</td>\n",
              "      <td>no</td>\n",
              "      <td>2787</td>\n",
              "      <td>no</td>\n",
              "      <td>no</td>\n",
              "      <td>telephone</td>\n",
              "      <td>1</td>\n",
              "      <td>jul</td>\n",
              "      <td>372</td>\n",
              "      <td>1</td>\n",
              "      <td>-1</td>\n",
              "      <td>0</td>\n",
              "      <td>unknown</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3709</td>\n",
              "      <td>31</td>\n",
              "      <td>self-employed</td>\n",
              "      <td>single</td>\n",
              "      <td>tertiary</td>\n",
              "      <td>no</td>\n",
              "      <td>144</td>\n",
              "      <td>yes</td>\n",
              "      <td>no</td>\n",
              "      <td>unknown</td>\n",
              "      <td>16</td>\n",
              "      <td>may</td>\n",
              "      <td>676</td>\n",
              "      <td>1</td>\n",
              "      <td>-1</td>\n",
              "      <td>0</td>\n",
              "      <td>unknown</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>37422</td>\n",
              "      <td>57</td>\n",
              "      <td>services</td>\n",
              "      <td>single</td>\n",
              "      <td>primary</td>\n",
              "      <td>no</td>\n",
              "      <td>3777</td>\n",
              "      <td>yes</td>\n",
              "      <td>no</td>\n",
              "      <td>telephone</td>\n",
              "      <td>13</td>\n",
              "      <td>may</td>\n",
              "      <td>65</td>\n",
              "      <td>2</td>\n",
              "      <td>-1</td>\n",
              "      <td>0</td>\n",
              "      <td>unknown</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>12527</td>\n",
              "      <td>45</td>\n",
              "      <td>blue-collar</td>\n",
              "      <td>divorced</td>\n",
              "      <td>secondary</td>\n",
              "      <td>no</td>\n",
              "      <td>-705</td>\n",
              "      <td>no</td>\n",
              "      <td>yes</td>\n",
              "      <td>unknown</td>\n",
              "      <td>3</td>\n",
              "      <td>jul</td>\n",
              "      <td>111</td>\n",
              "      <td>1</td>\n",
              "      <td>-1</td>\n",
              "      <td>0</td>\n",
              "      <td>unknown</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      ID  age            job   marital  education default  balance housing  \\\n",
              "0  38441   32       services   married  secondary      no      118     yes   \n",
              "1  40403   78        retired  divorced    primary      no     2787      no   \n",
              "2   3709   31  self-employed    single   tertiary      no      144     yes   \n",
              "3  37422   57       services    single    primary      no     3777     yes   \n",
              "4  12527   45    blue-collar  divorced  secondary      no     -705      no   \n",
              "\n",
              "  loan    contact  day month  duration  campaign  pdays  previous poutcome  \n",
              "0   no   cellular   15   may        20         6     -1         0  unknown  \n",
              "1   no  telephone    1   jul       372         1     -1         0  unknown  \n",
              "2   no    unknown   16   may       676         1     -1         0  unknown  \n",
              "3   no  telephone   13   may        65         2     -1         0  unknown  \n",
              "4  yes    unknown    3   jul       111         1     -1         0  unknown  "
            ]
          },
          "execution_count": 185,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "#Loading the test data and viewing first few rows\n",
        "test = pd.read_csv(\"bank_data/test.csv\")\n",
        "test.head()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "bd85e91a-2f89-4791-a382-683eb6ed3975",
      "metadata": {
        "id": "bd85e91a-2f89-4791-a382-683eb6ed3975"
      },
      "source": [
        "## Performing some basic EDA\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "ca3493ea-92fc-458d-bf1e-c179771b3a75",
      "metadata": {
        "id": "ca3493ea-92fc-458d-bf1e-c179771b3a75",
        "outputId": "d1372cbe-124c-452e-e1f5-54d08d738ba5"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "The total rows in the training dataset is: 31647 \n",
            "The total columns in the training dataset is: 18\n"
          ]
        }
      ],
      "source": [
        "#Checking the dimension of the training dataset:\n",
        "print(\"The total rows in the training dataset is:\" ,train.shape[0] ,\"\\nThe total columns in the training dataset is:\" ,train.shape[1])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "729d3aff-ceaf-40a6-8a15-666c9cb188cd",
      "metadata": {
        "id": "729d3aff-ceaf-40a6-8a15-666c9cb188cd",
        "outputId": "b0892e48-7e7a-41b2-967e-6dc123380f38"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "The total rows in the test dataset is: 13564 \n",
            "The total columns in the test dataset is: 17\n"
          ]
        }
      ],
      "source": [
        "#Checking the dimension of the testing dataset:\n",
        "print(\"The total rows in the test dataset is:\" ,test.shape[0] ,\"\\nThe total columns in the test dataset is:\" ,test.shape[1])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "f500cb05-ff09-43a1-bc4f-bee0de132ff1",
      "metadata": {
        "id": "f500cb05-ff09-43a1-bc4f-bee0de132ff1"
      },
      "outputs": [],
      "source": [
        "#Checking the missing column in the test dataset.\n",
        "def check_column_similarity(data1, data2):\n",
        "    if len(data1.columns)==len(data2.columns):\n",
        "        print('Both train and test has same columns')\n",
        "    else:\n",
        "        print(\"Column length is different.\")\n",
        "        if len(data1.columns) > len(data2.columns):\n",
        "            print(set(data1.columns)-set(data2.columns))\n",
        "        else:\n",
        "            print(set(data2.columns)-set(data1.columns))\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "fa59b16f-34f7-4fb2-96ec-cbf95fc34fdf",
      "metadata": {
        "id": "fa59b16f-34f7-4fb2-96ec-cbf95fc34fdf",
        "outputId": "c41e480e-e870-43ae-c901-d61562246b3c"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Column length is different.\n",
            "{'subscribed'}\n"
          ]
        }
      ],
      "source": [
        "check_column_similarity(train, test)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "47555b1d-cc39-4300-8de5-e17575ce51c8",
      "metadata": {
        "id": "47555b1d-cc39-4300-8de5-e17575ce51c8"
      },
      "source": [
        "#### In this dataset 'subscribed' is our target column.We haves to predict if the client will subscribe (yes/no) to a term deposi.."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "4e2192c1-ba82-4029-b2bd-f89d31a089cf",
      "metadata": {
        "id": "4e2192c1-ba82-4029-b2bd-f89d31a089cf",
        "outputId": "ac7543fe-af95-4851-c707-7d4cb6b01513"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 31647 entries, 0 to 31646\n",
            "Data columns (total 18 columns):\n",
            " #   Column      Non-Null Count  Dtype \n",
            "---  ------      --------------  ----- \n",
            " 0   ID          31647 non-null  int64 \n",
            " 1   age         31647 non-null  int64 \n",
            " 2   job         31647 non-null  object\n",
            " 3   marital     31647 non-null  object\n",
            " 4   education   31647 non-null  object\n",
            " 5   default     31647 non-null  object\n",
            " 6   balance     31647 non-null  int64 \n",
            " 7   housing     31647 non-null  object\n",
            " 8   loan        31647 non-null  object\n",
            " 9   contact     31647 non-null  object\n",
            " 10  day         31647 non-null  int64 \n",
            " 11  month       31647 non-null  object\n",
            " 12  duration    31647 non-null  int64 \n",
            " 13  campaign    31647 non-null  int64 \n",
            " 14  pdays       31647 non-null  int64 \n",
            " 15  previous    31647 non-null  int64 \n",
            " 16  poutcome    31647 non-null  object\n",
            " 17  subscribed  31647 non-null  object\n",
            "dtypes: int64(8), object(10)\n",
            "memory usage: 4.3+ MB\n"
          ]
        }
      ],
      "source": [
        "# Checking the type of data and the missing value\n",
        "train.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "66ea141b-4cbc-4eb0-b68e-5b233e5c4332",
      "metadata": {
        "id": "66ea141b-4cbc-4eb0-b68e-5b233e5c4332",
        "outputId": "823e5e38-ce7c-4edd-8e50-2a210d473ea7"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "object    10\n",
              "int64      8\n",
              "Name: count, dtype: int64"
            ]
          },
          "execution_count": 194,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "train.dtypes.value_counts()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "68e1f70e-553e-4c93-b898-d1cb9ca96575",
      "metadata": {
        "id": "68e1f70e-553e-4c93-b898-d1cb9ca96575",
        "outputId": "d8bf8c51-fd85-4bc3-9389-57629fbbdb1c"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "ID            0\n",
              "age           0\n",
              "job           0\n",
              "marital       0\n",
              "education     0\n",
              "default       0\n",
              "balance       0\n",
              "housing       0\n",
              "loan          0\n",
              "contact       0\n",
              "day           0\n",
              "month         0\n",
              "duration      0\n",
              "campaign      0\n",
              "pdays         0\n",
              "previous      0\n",
              "poutcome      0\n",
              "subscribed    0\n",
              "dtype: int64"
            ]
          },
          "execution_count": 195,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "#checking for missing values\n",
        "train.isnull().sum()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "ffbf22d7-6ca9-4d15-9364-ffc09452a4f4",
      "metadata": {
        "id": "ffbf22d7-6ca9-4d15-9364-ffc09452a4f4",
        "outputId": "f9d2487e-9213-4f98-9e56-7cc16f1f7aff"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>age</th>\n",
              "      <th>balance</th>\n",
              "      <th>day</th>\n",
              "      <th>duration</th>\n",
              "      <th>campaign</th>\n",
              "      <th>pdays</th>\n",
              "      <th>previous</th>\n",
              "      <th>job_admin.</th>\n",
              "      <th>job_blue-collar</th>\n",
              "      <th>job_entrepreneur</th>\n",
              "      <th>job_housemaid</th>\n",
              "      <th>job_management</th>\n",
              "      <th>job_retired</th>\n",
              "      <th>job_self-employed</th>\n",
              "      <th>job_services</th>\n",
              "      <th>job_student</th>\n",
              "      <th>job_technician</th>\n",
              "      <th>job_unemployed</th>\n",
              "      <th>job_unknown</th>\n",
              "      <th>marital_divorced</th>\n",
              "      <th>marital_married</th>\n",
              "      <th>marital_single</th>\n",
              "      <th>education_primary</th>\n",
              "      <th>education_secondary</th>\n",
              "      <th>education_tertiary</th>\n",
              "      <th>education_unknown</th>\n",
              "      <th>default_no</th>\n",
              "      <th>default_yes</th>\n",
              "      <th>housing_no</th>\n",
              "      <th>housing_yes</th>\n",
              "      <th>loan_no</th>\n",
              "      <th>loan_yes</th>\n",
              "      <th>contact_cellular</th>\n",
              "      <th>contact_telephone</th>\n",
              "      <th>contact_unknown</th>\n",
              "      <th>month_apr</th>\n",
              "      <th>month_aug</th>\n",
              "      <th>month_dec</th>\n",
              "      <th>month_feb</th>\n",
              "      <th>month_jan</th>\n",
              "      <th>month_jul</th>\n",
              "      <th>month_jun</th>\n",
              "      <th>month_mar</th>\n",
              "      <th>month_may</th>\n",
              "      <th>month_nov</th>\n",
              "      <th>month_oct</th>\n",
              "      <th>month_sep</th>\n",
              "      <th>poutcome_failure</th>\n",
              "      <th>poutcome_other</th>\n",
              "      <th>poutcome_success</th>\n",
              "      <th>poutcome_unknown</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.00000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "      <td>31647.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>40.957247</td>\n",
              "      <td>1363.890258</td>\n",
              "      <td>15.835466</td>\n",
              "      <td>258.113534</td>\n",
              "      <td>2.765697</td>\n",
              "      <td>39.576042</td>\n",
              "      <td>0.574272</td>\n",
              "      <td>0.114734</td>\n",
              "      <td>0.216197</td>\n",
              "      <td>0.031851</td>\n",
              "      <td>0.027617</td>\n",
              "      <td>0.209783</td>\n",
              "      <td>0.049736</td>\n",
              "      <td>0.035485</td>\n",
              "      <td>0.091731</td>\n",
              "      <td>0.020065</td>\n",
              "      <td>0.167694</td>\n",
              "      <td>0.028597</td>\n",
              "      <td>0.006509</td>\n",
              "      <td>0.114703</td>\n",
              "      <td>0.603375</td>\n",
              "      <td>0.281922</td>\n",
              "      <td>0.151926</td>\n",
              "      <td>0.512655</td>\n",
              "      <td>0.293898</td>\n",
              "      <td>0.041521</td>\n",
              "      <td>0.981515</td>\n",
              "      <td>0.018485</td>\n",
              "      <td>0.444371</td>\n",
              "      <td>0.555629</td>\n",
              "      <td>0.837868</td>\n",
              "      <td>0.162132</td>\n",
              "      <td>0.645338</td>\n",
              "      <td>0.064682</td>\n",
              "      <td>0.28998</td>\n",
              "      <td>0.064935</td>\n",
              "      <td>0.136917</td>\n",
              "      <td>0.004961</td>\n",
              "      <td>0.057731</td>\n",
              "      <td>0.030872</td>\n",
              "      <td>0.153063</td>\n",
              "      <td>0.118115</td>\n",
              "      <td>0.010807</td>\n",
              "      <td>0.305527</td>\n",
              "      <td>0.087939</td>\n",
              "      <td>0.016178</td>\n",
              "      <td>0.012955</td>\n",
              "      <td>0.106234</td>\n",
              "      <td>0.040699</td>\n",
              "      <td>0.033747</td>\n",
              "      <td>0.819319</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>10.625134</td>\n",
              "      <td>3028.304293</td>\n",
              "      <td>8.337097</td>\n",
              "      <td>257.118973</td>\n",
              "      <td>3.113830</td>\n",
              "      <td>99.317592</td>\n",
              "      <td>2.422529</td>\n",
              "      <td>0.318706</td>\n",
              "      <td>0.411657</td>\n",
              "      <td>0.175607</td>\n",
              "      <td>0.163876</td>\n",
              "      <td>0.407160</td>\n",
              "      <td>0.217403</td>\n",
              "      <td>0.185006</td>\n",
              "      <td>0.288650</td>\n",
              "      <td>0.140225</td>\n",
              "      <td>0.373600</td>\n",
              "      <td>0.166673</td>\n",
              "      <td>0.080419</td>\n",
              "      <td>0.318668</td>\n",
              "      <td>0.489205</td>\n",
              "      <td>0.449943</td>\n",
              "      <td>0.358955</td>\n",
              "      <td>0.499848</td>\n",
              "      <td>0.455553</td>\n",
              "      <td>0.199494</td>\n",
              "      <td>0.134700</td>\n",
              "      <td>0.134700</td>\n",
              "      <td>0.496904</td>\n",
              "      <td>0.496904</td>\n",
              "      <td>0.368578</td>\n",
              "      <td>0.368578</td>\n",
              "      <td>0.478418</td>\n",
              "      <td>0.245968</td>\n",
              "      <td>0.45376</td>\n",
              "      <td>0.246415</td>\n",
              "      <td>0.343765</td>\n",
              "      <td>0.070260</td>\n",
              "      <td>0.233237</td>\n",
              "      <td>0.172973</td>\n",
              "      <td>0.360054</td>\n",
              "      <td>0.322750</td>\n",
              "      <td>0.103394</td>\n",
              "      <td>0.460637</td>\n",
              "      <td>0.283210</td>\n",
              "      <td>0.126164</td>\n",
              "      <td>0.113084</td>\n",
              "      <td>0.308142</td>\n",
              "      <td>0.197595</td>\n",
              "      <td>0.180581</td>\n",
              "      <td>0.384759</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>18.000000</td>\n",
              "      <td>-8019.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>33.000000</td>\n",
              "      <td>73.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>104.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>39.000000</td>\n",
              "      <td>450.000000</td>\n",
              "      <td>16.000000</td>\n",
              "      <td>180.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>-1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>48.000000</td>\n",
              "      <td>1431.000000</td>\n",
              "      <td>21.000000</td>\n",
              "      <td>318.500000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>-1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>95.000000</td>\n",
              "      <td>102127.000000</td>\n",
              "      <td>31.000000</td>\n",
              "      <td>4918.000000</td>\n",
              "      <td>63.000000</td>\n",
              "      <td>871.000000</td>\n",
              "      <td>275.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.00000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                age        balance           day      duration      campaign  \\\n",
              "count  31647.000000   31647.000000  31647.000000  31647.000000  31647.000000   \n",
              "mean      40.957247    1363.890258     15.835466    258.113534      2.765697   \n",
              "std       10.625134    3028.304293      8.337097    257.118973      3.113830   \n",
              "min       18.000000   -8019.000000      1.000000      0.000000      1.000000   \n",
              "25%       33.000000      73.000000      8.000000    104.000000      1.000000   \n",
              "50%       39.000000     450.000000     16.000000    180.000000      2.000000   \n",
              "75%       48.000000    1431.000000     21.000000    318.500000      3.000000   \n",
              "max       95.000000  102127.000000     31.000000   4918.000000     63.000000   \n",
              "\n",
              "              pdays      previous    job_admin.  job_blue-collar  \\\n",
              "count  31647.000000  31647.000000  31647.000000     31647.000000   \n",
              "mean      39.576042      0.574272      0.114734         0.216197   \n",
              "std       99.317592      2.422529      0.318706         0.411657   \n",
              "min       -1.000000      0.000000      0.000000         0.000000   \n",
              "25%       -1.000000      0.000000      0.000000         0.000000   \n",
              "50%       -1.000000      0.000000      0.000000         0.000000   \n",
              "75%       -1.000000      0.000000      0.000000         0.000000   \n",
              "max      871.000000    275.000000      1.000000         1.000000   \n",
              "\n",
              "       job_entrepreneur  job_housemaid  job_management   job_retired  \\\n",
              "count      31647.000000   31647.000000    31647.000000  31647.000000   \n",
              "mean           0.031851       0.027617        0.209783      0.049736   \n",
              "std            0.175607       0.163876        0.407160      0.217403   \n",
              "min            0.000000       0.000000        0.000000      0.000000   \n",
              "25%            0.000000       0.000000        0.000000      0.000000   \n",
              "50%            0.000000       0.000000        0.000000      0.000000   \n",
              "75%            0.000000       0.000000        0.000000      0.000000   \n",
              "max            1.000000       1.000000        1.000000      1.000000   \n",
              "\n",
              "       job_self-employed  job_services   job_student  job_technician  \\\n",
              "count       31647.000000  31647.000000  31647.000000    31647.000000   \n",
              "mean            0.035485      0.091731      0.020065        0.167694   \n",
              "std             0.185006      0.288650      0.140225        0.373600   \n",
              "min             0.000000      0.000000      0.000000        0.000000   \n",
              "25%             0.000000      0.000000      0.000000        0.000000   \n",
              "50%             0.000000      0.000000      0.000000        0.000000   \n",
              "75%             0.000000      0.000000      0.000000        0.000000   \n",
              "max             1.000000      1.000000      1.000000        1.000000   \n",
              "\n",
              "       job_unemployed   job_unknown  marital_divorced  marital_married  \\\n",
              "count    31647.000000  31647.000000      31647.000000     31647.000000   \n",
              "mean         0.028597      0.006509          0.114703         0.603375   \n",
              "std          0.166673      0.080419          0.318668         0.489205   \n",
              "min          0.000000      0.000000          0.000000         0.000000   \n",
              "25%          0.000000      0.000000          0.000000         0.000000   \n",
              "50%          0.000000      0.000000          0.000000         1.000000   \n",
              "75%          0.000000      0.000000          0.000000         1.000000   \n",
              "max          1.000000      1.000000          1.000000         1.000000   \n",
              "\n",
              "       marital_single  education_primary  education_secondary  \\\n",
              "count    31647.000000       31647.000000         31647.000000   \n",
              "mean         0.281922           0.151926             0.512655   \n",
              "std          0.449943           0.358955             0.499848   \n",
              "min          0.000000           0.000000             0.000000   \n",
              "25%          0.000000           0.000000             0.000000   \n",
              "50%          0.000000           0.000000             1.000000   \n",
              "75%          1.000000           0.000000             1.000000   \n",
              "max          1.000000           1.000000             1.000000   \n",
              "\n",
              "       education_tertiary  education_unknown    default_no   default_yes  \\\n",
              "count        31647.000000       31647.000000  31647.000000  31647.000000   \n",
              "mean             0.293898           0.041521      0.981515      0.018485   \n",
              "std              0.455553           0.199494      0.134700      0.134700   \n",
              "min              0.000000           0.000000      0.000000      0.000000   \n",
              "25%              0.000000           0.000000      1.000000      0.000000   \n",
              "50%              0.000000           0.000000      1.000000      0.000000   \n",
              "75%              1.000000           0.000000      1.000000      0.000000   \n",
              "max              1.000000           1.000000      1.000000      1.000000   \n",
              "\n",
              "         housing_no   housing_yes       loan_no      loan_yes  \\\n",
              "count  31647.000000  31647.000000  31647.000000  31647.000000   \n",
              "mean       0.444371      0.555629      0.837868      0.162132   \n",
              "std        0.496904      0.496904      0.368578      0.368578   \n",
              "min        0.000000      0.000000      0.000000      0.000000   \n",
              "25%        0.000000      0.000000      1.000000      0.000000   \n",
              "50%        0.000000      1.000000      1.000000      0.000000   \n",
              "75%        1.000000      1.000000      1.000000      0.000000   \n",
              "max        1.000000      1.000000      1.000000      1.000000   \n",
              "\n",
              "       contact_cellular  contact_telephone  contact_unknown     month_apr  \\\n",
              "count      31647.000000       31647.000000      31647.00000  31647.000000   \n",
              "mean           0.645338           0.064682          0.28998      0.064935   \n",
              "std            0.478418           0.245968          0.45376      0.246415   \n",
              "min            0.000000           0.000000          0.00000      0.000000   \n",
              "25%            0.000000           0.000000          0.00000      0.000000   \n",
              "50%            1.000000           0.000000          0.00000      0.000000   \n",
              "75%            1.000000           0.000000          1.00000      0.000000   \n",
              "max            1.000000           1.000000          1.00000      1.000000   \n",
              "\n",
              "          month_aug     month_dec     month_feb     month_jan     month_jul  \\\n",
              "count  31647.000000  31647.000000  31647.000000  31647.000000  31647.000000   \n",
              "mean       0.136917      0.004961      0.057731      0.030872      0.153063   \n",
              "std        0.343765      0.070260      0.233237      0.172973      0.360054   \n",
              "min        0.000000      0.000000      0.000000      0.000000      0.000000   \n",
              "25%        0.000000      0.000000      0.000000      0.000000      0.000000   \n",
              "50%        0.000000      0.000000      0.000000      0.000000      0.000000   \n",
              "75%        0.000000      0.000000      0.000000      0.000000      0.000000   \n",
              "max        1.000000      1.000000      1.000000      1.000000      1.000000   \n",
              "\n",
              "          month_jun     month_mar     month_may     month_nov     month_oct  \\\n",
              "count  31647.000000  31647.000000  31647.000000  31647.000000  31647.000000   \n",
              "mean       0.118115      0.010807      0.305527      0.087939      0.016178   \n",
              "std        0.322750      0.103394      0.460637      0.283210      0.126164   \n",
              "min        0.000000      0.000000      0.000000      0.000000      0.000000   \n",
              "25%        0.000000      0.000000      0.000000      0.000000      0.000000   \n",
              "50%        0.000000      0.000000      0.000000      0.000000      0.000000   \n",
              "75%        0.000000      0.000000      1.000000      0.000000      0.000000   \n",
              "max        1.000000      1.000000      1.000000      1.000000      1.000000   \n",
              "\n",
              "          month_sep  poutcome_failure  poutcome_other  poutcome_success  \\\n",
              "count  31647.000000      31647.000000    31647.000000      31647.000000   \n",
              "mean       0.012955          0.106234        0.040699          0.033747   \n",
              "std        0.113084          0.308142        0.197595          0.180581   \n",
              "min        0.000000          0.000000        0.000000          0.000000   \n",
              "25%        0.000000          0.000000        0.000000          0.000000   \n",
              "50%        0.000000          0.000000        0.000000          0.000000   \n",
              "75%        0.000000          0.000000        0.000000          0.000000   \n",
              "max        1.000000          1.000000        1.000000          1.000000   \n",
              "\n",
              "       poutcome_unknown  \n",
              "count      31647.000000  \n",
              "mean           0.819319  \n",
              "std            0.384759  \n",
              "min            0.000000  \n",
              "25%            1.000000  \n",
              "50%            1.000000  \n",
              "75%            1.000000  \n",
              "max            1.000000  "
            ]
          },
          "execution_count": 288,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "# Descriptive Statistical Analysis:\n",
        "train.describe( include='all')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "40dedafa-ff6f-4828-a632-67fd5b578276",
      "metadata": {
        "id": "40dedafa-ff6f-4828-a632-67fd5b578276",
        "outputId": "82915610-26a9-4744-b6b6-544c535135e5"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "<Axes: xlabel='subscribed', ylabel='count'>"
            ]
          },
          "execution_count": 197,
          "metadata": {},
          "output_type": "execute_result"
        },
        {
          "data": {
            "image/png": "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8zt37pTdbldwcLDi4+O1b9++6/bdvn17WSwWjR49WiUlJe656upqpaamymazKTw8XC+88EKdrysAAABoUCCNGzdOb7311i09cWRkpObOnauUlJR657ds2SKn0ymn01nnE3MXL17UyJEjNXPmTJWUlGjcuHFKSEhQVVWVJGn79u1KT0/Xu+++q+LiYvn5+Sk1NdW9fUZGhvLz83XkyBHl5+crNzdXK1euvKVjAQAAPy0NusR24cIFTZgwQZmZmYqMjKwzt379+pvax6hRoyRJBQUFunDhwk0/d25urrp27aoJEyZIkmbMmKElS5Zox44dGj58uNauXatJkyapb9++kqSFCxeqV69eKisrU0hIiLKyspSZmak2bdpIkn7729/qjTfe0LRp0+p9vuLiYhUXF183XlhYeNNrBgAATUuDAql58+bXXRZrbBMnTlRtba1iYmK0cOFCDRgwQJLkcDgUGxvrfpyPj4/69Okjh8Oh4cOHy+FwaOjQoe75bt26KSAgQIcOHVL37t1VVFRUZ/vY2Fg5HI4briMzM1MLFixo9OMDAADeq0GBlJWV1djrqCM7O1txcXGSpLVr12ro0KE6cOCAOnXqJKfTqdDQ0DqPt9ls7q8bcDqdstls9c5f+/6m78/bbDZVVlaqpqZG/v7XvxxTp05VQkLCdeOFhYVKSkq6lcMEAABeqsHfg3Q73X///e7706ZN06ZNm5SXl6fU1FRZLBaVlZXVeXxZWZmsVqsk/eC8xWJx//z9+82bN683jiQpIiJCERERjXZsAADA+zXoTdodOnRQx44d673dDr6+vu5PmtntdhUUFLjnXC6X9u/fL7vdXu/8sWPHVFVVpR49eig0NFSRkZF15gsKCtzbAgAASA08g/TSSy/V+fnMmTNatWqVpk6detP7qKmpcd9qa2tVWVkpPz8/FRcX69SpU+6vEVi3bp3+8Y9/aPXq1ZK+e3P3888/r+zsbCUmJur111+XJD388MOSpOTkZI0bN05PPvmkunXrprlz52rUqFEKCQlxz7/44ov613/9V1VWVmrx4sX6zW9+05CXAQAA/EQ1KJAmTpx43diwYcM0Z84czZo166b28dJLL9V583NOTo4mTpyomTNn6te//rWOHTumgIAA9erVS++9956io6MlSWFhYXr77beVlpamlJQU2e12bd26VYGBgZKkwYMHa/78+Ro+fLjKy8s1ZMgQ/fGPf3Q/T3p6ui5cuKBu3brJz89PKSkpdb4GAAAAwMfVSN+S6HK5FBISovLy8sbYndfLz89XXFyc9uzZ4/5Kgdsh7vmb+9oE4G6y59UJnl4CgCbqZv9+N+gMUm1tbZ2fL1++rMzMTLVt27YhuwMAAPAqDQokf3//6/5hWqvVqnXr1jXKogAAADypQYH04Ycf1vnZarWqe/fu7o/OAwAANGUNCqQHH3ywsdcBAADgNRr0PUiStHXrVg0bNkx2u13Dhg3TO++805jrAgAA8JgGBdL69es1fvx4de/eXampqerevbsmTJjAe5AAAMBPQoMusb322mt6++23NWjQIPdYQkKCnnnmmXq/IwkAAKApadAZpC+//FIPPfRQnbGBAwfqyy+/bJRFAQAAeFKD/y22nTt31hn75JNP
